SAMPLE_GENERATION_PROMPT = """من می‌خواهم یک مدل زبانی بزرگ را آموزش دهم و شما باید به من در تولید داده‌های آموزشی کمک کنید. در اینجا پیام سیستمی مدل آمده است که به آن می‌گوید چه کاری باید انجام دهد:

<system_prompt>
{{{{system_prompt}}}}
</system_prompt>

شما اکنون باید سه نمونه آموزشی برای مدل تولید کنید. هر نمونه آموزشی باید شامل یک شیء JSON با فیلد "messages" باشد که فهرستی از پیام‌ها با نقش‌های کاربر و دستیار به صورت متناوب است. پیام اول همیشه باید از طرف کاربر و آخرین پیام از طرف دستیار باشد. بسته به مورد استفاده از پیام سیستم، ممکن است چندین پیام کاربر و دستیار وجود داشته باشد. قالب هر نمونه آموزشی باید دقیقاً از این فرمت پیروی کند:

{
    "messages": [
        {
            "role": "user", 
            "content": "<محتوای_کاربر>"
        },
        {
            "role": "assistant",
            "content": "<محتوای_دستیار>"
        }
    ]
}

بسیار مهم است که شما فقط با JSON معتبر پاسخ دهید. هیچ مقدمه، توضیح، خلاصه یا متن اضافی که بخشی از شیء JSON نیست را شامل نکنید. هر محتوای غیر JSON نادرست در نظر گرفته می‌شود. اگر در تولید JSON معتبر با مشکل مواجه شدید، لطفاً دوباره تلاش کنید یا یک پاسخ پیش‌فرض ارائه دهید.

لطفاً نمونه‌ها را به زبان فارسی و در بافت فرهنگی ایران تولید کنید.

در اینجا ورودی‌های اضافی برای راهنمایی شما آمده است:

{{{{instructions}}}}
{{{{examples}}}}
{{{{subtopics}}}}

اکنون، یک نمونه آموزشی در قالب JSON مشخص شده تولید کنید. فقط با JSON معتبر پاسخ دهید."""

TREE_GENERATION_PROMPT = """من می‌خواهم یک مدل زبانی بزرگ را آموزش دهم و از یک مدل زبانی بزرگتر برای تولید داده‌های آموزشی استفاده می‌کنم. با این حال، اگر همیشه از مدل بزرگتر بخواهیم که با یک پیام یکسان داده‌های آموزشی تولید کند، در نهایت نمونه‌های تکراری تولید خواهد کرد. بنابراین، ما پیام خود را برای هر فرآیند نمونه‌گیری بر اساس جنبه‌های مختلف کمی تغییر می‌دهیم. به عنوان مثال، هنگام درخواست از مدل برای تولید مقالات خبری، می‌توانیم پیام را طوری تغییر دهیم که مدل اخبار مربوط به موضوعات خاص مانند تجارت یا سیاست را بیان کند. برای تولید بیشتر داده‌های آموزشی، این کار را به صورت بازگشتی انجام می‌دهیم و تغییرات فرعی در پیام ایجاد می‌کنیم. به عنوان مثال، در حوزه تجارت، می‌توانیم پیام را برای تولید اخبار مربوط به بازار سهام یا رسوایی‌های تجاری تنظیم کنیم، و در سیاست، می‌توانیم از مدل بخواهیم مقالاتی برای موضوعات فرعی مانند انتخابات یا سیاست‌های اقلیمی تولید کند. ما این کار را به صورت بازگشتی انجام می‌دهیم و بنابراین، یک ساختار درختی از موضوعات به دست می‌آوریم.

وظیفه شما به این شرح است: من یک مسیر از گره‌ها در درخت موضوعات به شما می‌دهم - شما باید فهرستی از موضوعات فرعی جدید برای این گره ارائه دهید و آن را به صورت یک لیست پایتون برگردانید. در اینجا چند مثال از خروجی‌های مورد نظر آمده است که مربوط به مثال خبری است که قبلاً ذکر کردم:

مثال ۱:
مسیر گره: "موضوعات خبری" -> "ورزش" -> "فوتبال"
تعداد موضوعات فرعی مورد نیاز: ۵
موضوعات فرعی: ["فوتبال دانشگاهی", "ورزشگاه‌های فوتبال", "پیامدهای سلامتی فوتبال", "تیم سیاتل سیهاکس", "اسپانسرهای فوتبال"]

مثال ۲:
مسیر گره: "موضوعات خبری" -> "سرگرمی" -> "فیلم‌ها" -> "چهره‌های ستاره‌ها"
تعداد موضوعات فرعی مورد نیاز: ۸
موضوعات فرعی: ["تام هنکس", "مریل استریپ", "لئوناردو دی‌کاپریو", "جنیفر لارنس", "دنزل واشنگتن", "شارلیز ترون", "رابرت داونی جونیور", "اما استون"]

در اینجا سه مثال دیگر برای تولید موضوعات گفتگوی دوستانه برای یک دستیار گفتگو آمده است:

مثال ۱:
مسیر گره: "موضوعات گفتگوی دوستانه"
تعداد موضوعات فرعی مورد نیاز: ۷
موضوعات فرعی: ["آب و هوا", "برنامه‌های آخر هفته", "سرگرمی‌ها", "خانواده", "کتاب‌ها", "غذا", "موسیقی"]

مثال ۲:
مسیر گره: "موضوعات گفتگوی دوستانه" -> "خانواده"
تعداد موضوعات فرعی مورد نیاز: ۵
موضوعات فرعی: ["والدین", "پدربزرگ و مادربزرگ", "خواهر و برادر", "سنت‌های خانوادگی", "تعطیلات خانوادگی"]

مثال ۳:
مسیر گره: "موضوعات گفتگوی دوستانه" -> "سرگرمی‌ها" -> "آشپزی"
تعداد موضوعات فرعی مورد نیاز: ۶
موضوعات فرعی: ["دستور پخت‌ها", "غذاهای آسیایی", "غذاهای مورد علاقه", "کتاب‌های آشپزی", "وسایل آشپزخانه", "آشپزی گیاهی"]

در اینجا توضیح / پیام سیستمی برای مدلی که می‌خواهیم آموزش دهیم آمده است:

<system_prompt>
{{{{system_prompt}}}}
</system_prompt>

این ورودی موضوع شماست. هنگام تولید موضوعات فرعی، تا حدی مبهم بمانید. موضوعات می‌توانند فقط ارتباط غیرمستقیم داشته باشند و نیازی نیست به یک روش خاص تفسیر شوند. مهمتر از همه، اطمینان حاصل کنید که موضوعات فرعی با پیام سیستم، اگر ارائه شده باشد، مطابقت دارند:
مسیر گره: {{{{subtopics_list}}}}
تعداد موضوعات فرعی مورد نیاز: {{{{num_subtopics}}}}

لطفاً موضوعات فرعی را به زبان فارسی و در بافت فرهنگی ایران تولید کنید.

اکنون موضوعات فرعی را به صورت یک لیست پایتون برگردانید، و آن را فقط در یک خط برگردانید، نه در چند خط. چیز دیگری برنگردانید."""

TREE_JSON_INSTRUCTIONS = """هنگام فهرست کردن موضوعات فرعی، پاسخ خود را به صورت یک آرایه JSON از رشته‌ها قالب‌بندی کنید.
مثال: ["موضوع ۱", "موضوع ۲", "موضوع ۳"]
۱. از نقل قول دوتایی برای رشته‌ها استفاده کنید
۲. از کروشه برای آرایه استفاده کنید
۳. موارد را با کاما از هم جدا کنید
۴. هیچ متنی قبل یا بعد از آرایه JSON قرار ندهید
۵. اطمینان حاصل کنید که نحو JSON معتبر است
"""

OLD_ENGINE_JSON_INSTRUCTIONS = """پاسخ شما **باید JSON معتبر** باشد که توسط `json.loads()` قابل تجزیه باشد. لطفاً این قوانین را دقیقاً رعایت کنید:

۱. **فقط نقل قول دوتایی**: از نقل قول دوتایی (`"`) برای تمام مقادیر رشته‌ای، از جمله کلیدها استفاده کنید.
۲. **بدون متن اضافی**: هیچ متنی قبل یا بعد از بلوک JSON قرار ندهید. اطمینان حاصل کنید که خروجی **فقط JSON** است.
۳. **نحو معتبر**: بررسی کنید که تمام نحو JSON صحیح است:
   - هر جفت کلید-مقدار باید با دو نقطه جدا شود.
   - هر مورد در آرایه یا شیء را با کاما جدا کنید، به جز آخرین مورد.
۴. **بدون کامای اضافی**: اطمینان حاصل کنید که هیچ کامای اضافی در آرایه‌ها یا اشیاء وجود ندارد.
۵. **قالب‌بندی اعداد**: اطمینان حاصل کنید که اعداد به درستی قالب‌بندی شده‌اند (مثلاً بدون صفر پیشرو مگر اینکه عدد اعشاری باشد).
۶. **مقادیر بولی و تهی**: از `true`، `false` و `null` با حروف کوچک به عنوان مقادیر معتبر JSON استفاده کنید.
۷. **اعتبارسنجی نهایی**: پاسخ شما به عنوان JSON تجزیه خواهد شد. هرگونه خطای نحوی باعث شکست می‌شود، پس با دقت بررسی کنید.

**مهم**: کل پاسخ باید **JSON معتبر** باشد، بدون توضیحات، نظرات یا متن خارج از ساختار JSON.
"""

ENGINE_JSON_INSTRUCTIONS = """شما یک سازنده JSON متخصص هستید که برای کمک به طیف گسترده‌ای از وظایف طراحی شده‌اید.

پاسخ شما **باید JSON معتبر** باشد که توسط `json.loads()` قابل تجزیه باشد. این قوانین را دقیقاً دنبال کنید:

1. **فقط نقل قول دوتایی**: از نقل قول دوتایی (`"`) برای تمام مقادیر رشته‌ای، از جمله کلیدها استفاده کنید.
2. **بدون متن اضافی**: هیچ متنی قبل یا بعد از بلوک JSON قرار ندهید. اطمینان حاصل کنید که خروجی **فقط JSON** است.
3. **نحو معتبر**: بررسی کنید که تمام نحو JSON صحیح است:
   - هر جفت کلید-مقدار باید با دو نقطه جدا شود.
   - هر مورد در آرایه یا شیء را با کاما جدا کنید، به جز آخرین مورد.
4. **بدون کامای اضافی**: اطمینان حاصل کنید که هیچ کامای اضافی در آرایه‌ها یا اشیاء وجود ندارد.
5. **قالب‌بندی اعداد**: اطمینان حاصل کنید که اعداد به درستی قالب‌بندی شده‌اند (مثلاً بدون صفر پیشرو مگر اینکه عدد اعشاری باشد).
6. **مقادیر بولی و تهی**: از `true`، `false` و `null` با حروف کوچک به عنوان مقادیر معتبر JSON استفاده کنید.
7. **اعتبارسنجی نهایی**: پاسخ شما به عنوان JSON تجزیه خواهد شد. هرگونه خطای نحوی باعث شکست می‌شود، پس با دقت بررسی کنید.

**مهم**: کل پاسخ باید **JSON معتبر** باشد، بدون توضیحات، نظرات یا متن خارج از ساختار JSON.

**ساختار JSON**:
```json
{
  "messages": [
    {
      "role": "user",
      "content": "<user_message>"
    },
    {
      "role": "assistant",
      "content": "<assistant_response>"
    }
  ]
}
```

**مثال‌های JSON**:
```json
{
  "messages": [
    {
      "role": "user",
      "content": "Hey, how are you today?"
    },
    {
      "role": "assistant",
      "content": "I'm good thanks, how are you?"
    }
  ]
},
{
  "messages": [
    {
      "role": "user",
      "content": "What color is the sky?"
    },
    {
      "role": "assistant",
      "content": "The sky is blue."
    }
  ]
}
```

همه گفتگوهای دستیار با استفاده از این فرمت JSON انجام می‌شود.
"""
